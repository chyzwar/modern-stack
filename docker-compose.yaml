version: '3'

services:
  postgres:
    image: postgres
    env_file: 
      - ./packages/api/.env
    labels:
      - "traefik.enable=false"
    ports:
      - "5434:5432"

  pgadmin4:
    image: dpage/pgadmin4
    depends_on: 
      - postgres
    env_file: 
      - ./packages/api/.env
    labels:
      - "traefik.enable=false"
    ports:
      - "81:80"     

  build:
    image: node:18
    volumes:
      - .:/home/node/app
    user: "${DOCKER_USER}:${DOCKER_GROUP}"
    working_dir: '/home/node/app'
    command: yarn build:watch --preserveWatchOutput
    labels:
      - "traefik.enable=false"
    tty: true
    
  api:
    image: node:18
    env_file: 
      - ./packages/api/.env
    user: "${DOCKER_USER}:${DOCKER_GROUP}"
    depends_on: 
      - postgres
      - build
    ports:
      - "3000:3000"
      - "9231:9231"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${PROJECT_DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.http.routers.api.entrypoints=web"
    volumes:
      - .:/home/node/app
    working_dir: '/home/node/app/packages/api'
    command: yarn start
    tty: true

  ui:
    image: node:18
    env_file: 
      - ./packages/ui/.env
    user: "${DOCKER_USER}:${DOCKER_GROUP}"
    depends_on: 
      - api
      - build
    ports:
      - "4000:4000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ui.rule=Host(`${PROJECT_DOMAIN}`)"
      - "traefik.http.services.ui.loadbalancer.server.port=4000"
      - "traefik.http.routers.ui.entrypoints=web"
    volumes:
      - .:/home/node/app
    working_dir: '/home/node/app/packages/ui'
    command: yarn start
    stdin_open: true
    tty: true

  admin-ui:
    image: node:18
    env_file: 
      - ./packages/admin-ui/.env
    user: "${DOCKER_USER}:${DOCKER_GROUP}"
    depends_on: 
      - api
      - build
    ports:
      - "5000:5000"
    volumes:
      - .:/home/node/app
    working_dir: '/home/node/app/packages/admin-ui'
    command: yarn start
    stdin_open: true
    tty: true

  reverse-proxy:
    image: traefik:v2.10
    command: 
      - "--api.insecure=true"
      - "--providers.docker"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=false" 