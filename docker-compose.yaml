version: '3'

services:
  postgres:
    image: postgres
    env_file: 
      - ./packages/api/.env
    ports:
      - "5434:5432"

  pgadmin4:
    image: dpage/pgadmin4
    depends_on: 
      - postgres
    env_file: 
      - ./packages/api/.env
    ports:
      - "81:80"     

  build:
    image: node:16
    volumes:
      - .:/home/node/app
    user: "${DOCKER_USER}:${DOCKER_GROUP}"
    working_dir: '/home/node/app'
    command: yarn build:watch --preserveWatchOutput
    tty: true
    
  api:
    image: node:16
    env_file: 
      - ./packages/api/.env
    user: "${DOCKER_USER}:${DOCKER_GROUP}"
    depends_on: 
      - postgres
      - build
    ports:
      - "3000:3000"
      - "9231:9231"
    volumes:
      - .:/home/node/app
    working_dir: '/home/node/app/packages/api'
    command: yarn start
    tty: true

  ui:
    image: node:16
    env_file: 
      - ./packages/ui/.env
    user: "${DOCKER_USER}:${DOCKER_GROUP}"
    depends_on: 
      - api
      - build
    ports:
      - "4000:4000"
    volumes:
      - .:/home/node/app
    working_dir: '/home/node/app/packages/ui'
    command: yarn start
    stdin_open: true
    tty: true

  admin-ui:
    image: node:16
    env_file: 
      - ./packages/admin-ui/.env
    user: "${DOCKER_USER}:${DOCKER_GROUP}"
    depends_on: 
      - api
      - build
    ports:
      - "5000:5000"
    volumes:
      - .:/home/node/app
    working_dir: '/home/node/app/packages/admin-ui'
    command: yarn start
    stdin_open: true
    tty: true

  nginx:
    image: nginx:1.21
    depends_on: 
      - postgres
      - admin-ui
      - ui
      - api
    ports: 
      - "80:80"
      - "443:443"
    volumes:
      - .local/nginx.conf:/etc/nginx/nginx.conf